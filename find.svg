<?xml version="1.0" encoding="utf-8"?><svg xmlns="http://www.w3.org/2000/svg" viewBox="138.3 42.2 223.4 65.6" style="background: rgba(0, 0, 0, 0);"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script>
  <defs>
    <linearGradient id="editing-gradient-gradient" x1="0" x2="1" y1="0.5" y2="0.5" gradientUnits="objectBoundingBox">
      <stop offset="0" style="stop-color: rgb(252, 51, 121);"/>
      <stop offset="1" style="stop-color: rgb(25, 25, 50);"/>
    </linearGradient>
    <style>text {
  font-size: 64px;
  font-family: Arial Black;
  dominant-baseline: central;
  text-anchor: middle;
}</style>
  </defs>
  <g>
    <g transform="translate(177.385008841753, 85.15499973297119)">
      <path d="M7.37-18.55L7.37-18.55Q6.13-18.55 5.49-17.87L5.49-17.87L5.49-17.87Q4.86-17.20 4.86-15.88L4.86-15.88L4.86-14.20L9.23-14.20L9.23-12.58L4.91-12.58L4.91 0L3.00 0L3.00-12.58L0.46-12.58L0.46-14.20L3.00-14.20L3.00-15.96L3.00-15.96Q3.00-17.90 4.12-19.04L4.12-19.04L4.12-19.04Q5.24-20.17 7.29-20.17L7.29-20.17L7.29-20.17Q8.10-20.17 8.86-19.94L8.86-19.94L8.86-19.94Q9.61-19.71 10.13-19.28L10.13-19.28L9.48-17.85L9.48-17.85Q8.64-18.55 7.37-18.55L7.37-18.55ZM11.83 0L11.83-14.20L13.74-14.20L13.74 0L11.83 0ZM12.80-17.31L12.80-17.31Q12.20-17.31 11.80-17.71L11.80-17.71L11.80-17.71Q11.39-18.12 11.39-18.68L11.39-18.68L11.39-18.68Q11.39-19.22 11.80-19.63L11.80-19.63L11.80-19.63Q12.20-20.03 12.80-20.03L12.80-20.03L12.80-20.03Q13.39-20.03 13.80-19.64L13.80-19.64L13.80-19.64Q14.20-19.25 14.20-18.71L14.20-18.71L14.20-18.71Q14.20-18.12 13.80-17.71L13.80-17.71L13.80-17.71Q13.39-17.31 12.80-17.31L12.80-17.31ZM26.33-14.31L26.33-14.31Q29.00-14.31 30.58-12.76L30.58-12.76L30.58-12.76Q32.16-11.21 32.16-8.23L32.16-8.23L32.16 0L30.24 0L30.24-8.05L30.24-8.05Q30.24-10.26 29.13-11.42L29.13-11.42L29.13-11.42Q28.03-12.58 25.97-12.58L25.97-12.58L25.97-12.58Q23.68-12.58 22.34-11.22L22.34-11.22L22.34-11.22Q21.01-9.86 21.01-7.45L21.01-7.45L21.01 0L19.09 0L19.09-14.20L20.93-14.20L20.93-11.58L20.93-11.58Q21.71-12.88 23.10-13.59L23.10-13.59L23.10-13.59Q24.49-14.31 26.33-14.31L26.33-14.31ZM48.41-20.03L50.33-20.03L50.33 0L48.49 0L48.49-2.81L48.49-2.81Q47.63-1.38 46.21-0.62L46.21-0.62L46.21-0.62Q44.79 0.14 43.01 0.14L43.01 0.14L43.01 0.14Q41.01 0.14 39.39-0.78L39.39-0.78L39.39-0.78Q37.77-1.70 36.86-3.35L36.86-3.35L36.86-3.35Q35.94-5.00 35.94-7.10L35.94-7.10L35.94-7.10Q35.94-9.21 36.86-10.85L36.86-10.85L36.86-10.85Q37.77-12.50 39.39-13.41L39.39-13.41L39.39-13.41Q41.01-14.31 43.01-14.31L43.01-14.31L43.01-14.31Q44.74-14.31 46.13-13.59L46.13-13.59L46.13-13.59Q47.52-12.88 48.41-11.50L48.41-11.50L48.41-20.03ZM43.17-1.57L43.17-1.57Q44.66-1.57 45.86-2.25L45.86-2.25L45.86-2.25Q47.06-2.94 47.75-4.21L47.75-4.21L47.75-4.21Q48.44-5.48 48.44-7.10L48.44-7.10L48.44-7.10Q48.44-8.72 47.75-9.99L47.75-9.99L47.75-9.99Q47.06-11.26 45.86-11.95L45.86-11.95L45.86-11.95Q44.66-12.64 43.17-12.64L43.17-12.64L43.17-12.64Q41.66-12.64 40.46-11.95L40.46-11.95L40.46-11.95Q39.26-11.26 38.57-9.99L38.57-9.99L38.57-9.99Q37.88-8.72 37.88-7.10L37.88-7.10L37.88-7.10Q37.88-5.48 38.57-4.21L38.57-4.21L38.57-4.21Q39.26-2.94 40.46-2.25L40.46-2.25L40.46-2.25Q41.66-1.57 43.17-1.57L43.17-1.57ZM80.46-14.31L80.46-14.31Q83.13-14.31 84.66-12.77L84.66-12.77L84.66-12.77Q86.18-11.23 86.18-8.23L86.18-8.23L86.18 0L84.27 0L84.27-8.05L84.27-8.05Q84.27-10.26 83.20-11.42L83.20-11.42L83.20-11.42Q82.13-12.58 80.19-12.58L80.19-12.58L80.19-12.58Q77.98-12.58 76.71-11.22L76.71-11.22L76.71-11.22Q75.44-9.86 75.44-7.45L75.44-7.45L75.44 0L73.52 0L73.52-8.05L73.52-8.05Q73.52-10.26 72.45-11.42L72.45-11.42L72.45-11.42Q71.39-12.58 69.42-12.58L69.42-12.58L69.42-12.58Q67.23-12.58 65.95-11.22L65.95-11.22L65.95-11.22Q64.67-9.86 64.67-7.45L64.67-7.45L64.67 0L62.75 0L62.75-14.20L64.58-14.20L64.58-11.61L64.58-11.61Q65.34-12.91 66.69-13.61L66.69-13.61L66.69-13.61Q68.04-14.31 69.80-14.31L69.80-14.31L69.80-14.31Q71.58-14.31 72.89-13.55L72.89-13.55L72.89-13.55Q74.20-12.80 74.84-11.31L74.84-11.31L74.84-11.31Q75.63-12.72 77.10-13.51L77.10-13.51L77.10-13.51Q78.57-14.31 80.46-14.31L80.46-14.31ZM103.79-7.10L103.76-6.51L91.88-6.51L91.88-6.51Q92.04-4.29 93.58-2.93L93.58-2.93L93.58-2.93Q95.12-1.57 97.47-1.57L97.47-1.57L97.47-1.57Q98.79-1.57 99.90-2.04L99.90-2.04L99.90-2.04Q101.01-2.51 101.82-3.43L101.82-3.43L102.90-2.19L102.90-2.19Q101.95-1.05 100.53-0.46L100.53-0.46L100.53-0.46Q99.12 0.14 97.42 0.14L97.42 0.14L97.42 0.14Q95.23 0.14 93.54-0.80L93.54-0.80L93.54-0.80Q91.85-1.73 90.91-3.38L90.91-3.38L90.91-3.38Q89.96-5.02 89.96-7.10L89.96-7.10L89.96-7.10Q89.96-9.18 90.87-10.83L90.87-10.83L90.87-10.83Q91.77-12.47 93.35-13.39L93.35-13.39L93.35-13.39Q94.93-14.31 96.90-14.31L96.90-14.31L96.90-14.31Q98.87-14.31 100.44-13.39L100.44-13.39L100.44-13.39Q102.01-12.47 102.90-10.84L102.90-10.84L102.90-10.84Q103.79-9.21 103.79-7.10L103.79-7.10ZM96.90-12.66L96.90-12.66Q94.85-12.66 93.46-11.35L93.46-11.35L93.46-11.35Q92.07-10.04 91.88-7.94L91.88-7.94L101.95-7.94L101.95-7.94Q101.76-10.04 100.37-11.35L100.37-11.35L100.37-11.35Q98.98-12.66 96.90-12.66L96.90-12.66ZM120.58 0.14L120.58 0.14Q118.53 0.14 116.88-0.80L116.88-0.80L116.88-0.80Q115.24-1.73 114.29-3.38L114.29-3.38L114.29-3.38Q113.35-5.02 113.35-7.10L113.35-7.10L113.35-7.10Q113.35-9.18 114.29-10.83L114.29-10.83L114.29-10.83Q115.24-12.47 116.88-13.39L116.88-13.39L116.88-13.39Q118.53-14.31 120.58-14.31L120.58-14.31L120.58-14.31Q122.63-14.31 124.28-13.39L124.28-13.39L124.28-13.39Q125.93-12.47 126.86-10.83L126.86-10.83L126.86-10.83Q127.79-9.18 127.79-7.10L127.79-7.10L127.79-7.10Q127.79-5.02 126.86-3.38L126.86-3.38L126.86-3.38Q125.93-1.73 124.28-0.80L124.28-0.80L124.28-0.80Q122.63 0.14 120.58 0.14L120.58 0.14ZM120.58-1.57L120.58-1.57Q122.09-1.57 123.30-2.25L123.30-2.25L123.30-2.25Q124.50-2.94 125.17-4.21L125.17-4.21L125.17-4.21Q125.85-5.48 125.85-7.10L125.85-7.10L125.85-7.10Q125.85-8.72 125.17-9.99L125.17-9.99L125.17-9.99Q124.50-11.26 123.30-11.95L123.30-11.95L123.30-11.95Q122.09-12.64 120.58-12.64L120.58-12.64L120.58-12.64Q119.07-12.64 117.87-11.95L117.87-11.95L117.87-11.95Q116.67-11.26 115.98-9.99L115.98-9.99L115.98-9.99Q115.29-8.72 115.29-7.10L115.29-7.10L115.29-7.10Q115.29-5.48 115.98-4.21L115.98-4.21L115.98-4.21Q116.67-2.94 117.87-2.25L117.87-2.25L117.87-2.25Q119.07-1.57 120.58-1.57L120.58-1.57ZM138.94-14.31L138.94-14.31Q141.61-14.31 143.19-12.76L143.19-12.76L143.19-12.76Q144.77-11.21 144.77-8.23L144.77-8.23L144.77 0L142.86 0L142.86-8.05L142.86-8.05Q142.86-10.26 141.75-11.42L141.75-11.42L141.75-11.42Q140.64-12.58 138.59-12.58L138.59-12.58L138.59-12.58Q136.30-12.58 134.96-11.22L134.96-11.22L134.96-11.22Q133.62-9.86 133.62-7.45L133.62-7.45L133.62 0L131.71 0L131.71-14.20L133.54-14.20L133.54-11.58L133.54-11.58Q134.32-12.88 135.72-13.59L135.72-13.59L135.72-13.59Q137.11-14.31 138.94-14.31L138.94-14.31Z" fill="url(#editing-gradient-gradient)"/>
    </g>
  </g>
</svg>